# For information on supported formats and syntax for the config file, see
# <http://elasticsearch.org/guide/en/elasticsearch/reference/current/setup-configuration.html>


################################### Cluster ###################################

# Cluster name identifies your cluster for auto-discovery.
cluster.name: {{ getv "/hehe/services/elasticsearch/cluster.name" }}

#################################### Node #####################################
# Auto Generate Node Names
#node.name: "Franz Kafka"

#
# Allow this node to be eligible as a master node (enabled by default):
#
node.master: true

#
# Allow this node to store data (enabled by default):
#
node.data: true

# Use the Cluster Health API [http://${PUBLIC_IPV4}:9200/_cluster/health], the
# Node Info API [http://${PUBLIC_IPV4}:9200/_nodes]

#################################### Paths ####################################

path.conf: /usr/share/elasticsearch/config
path.data: /usr/share/elasticsearch/data
path.logs: /usr/share/elasticsearch/logs

############################## Network And HTTP ###############################

network.host: 0.0.0.0

# Elasticsearch, by default, binds itself to the 0.0.0.0 address, and listens
# on port [9200-9300] for HTTP traffic and on port [9300-9400] for node-to-node
# communication. (the range means that if the port is busy, it will automatically
# try the next port).

# Set the address other nodes will use to communicate with this node. If not
# set, it is automatically derived. It must point to an actual IP address.
# ------------
# network.publish_host: ${PRIVATE_IPV4}

transport.tcp.port: ${TRANSPORT_PORT}
http.port: ${HTTP_PORT}

################################## Discovery ##################################

# Default is 3, set slightly higher incase one instance is under heavy load
discovery.zen.ping.timeout: 10s

# See <http://elasticsearch.org/guide/en/elasticsearch/reference/current/modules-discovery-zen.html>
# We can't use multicast inside docker, as the containers are bridged.
discovery.zen.ping.multicast.enabled: false

# The first node becomes the master then once the others find another they
# negotiate responsibilites.
# e.g. ["ip:transport_port","etc:etc"]
#
discovery.zen.ping.unicast.hosts: [{{range gets "/hehe/services/elasticsearch/hosts/*"}}{{$data := json .Value}}"{{$data.IP}}:{{$data.TransportPort}}",{{end}}]
